{"version":3,"sources":["13-chart.js"],"names":["margin","width","height","svg","d3","select","append","attr","yPositionScale","scaleBand","range","widthScale","scaleLinear","domain","colorScale","scaleOrdinal","csv","then","ready","datapoints","names","map","d","name","selectAll","data","enter","hamburgers","animal","yAxis","axisLeft","call","xAxis","axisBottom","ticks","catch","err","log"],"mappings":";CACC,WAGKA,IAAAA,EACG,GADHA,EAEK,GAFLA,EAGM,GAHNA,EAII,GAGJC,EAAQ,IAAMD,EAAcA,EAC5BE,EAAS,IAAMF,EAAaA,EAE5BG,EAAMC,GACPC,OAAO,YACPC,OAAO,OACPC,KAAK,QAASN,EAAQD,EAAcA,GACpCO,KAAK,SAAUL,EAASF,EAAaA,GACrCM,OAAO,KACPC,KAAK,YAAa,aAAeP,EAAc,IAAMA,EAAa,KAGjEQ,EAAiBJ,GAAGK,YAAYC,MAAM,CAACR,EAAQ,IAE/CS,EAAaP,GACdQ,cACAC,OAAO,CAAC,EAAG,KACXH,MAAM,CAAC,EAAGT,IAETa,EAAaV,GAAGW,eAAeL,MAAM,CAAC,UAAW,UAAW,YAE7DM,GAAAA,IAAI,mBACJC,KAKMC,SAAMC,GAETC,IAAAA,EAAQD,EAAWE,IAAI,SAAK,GACvBC,OAAAA,EAAEC,OAGIV,EAAAA,OAAOO,GAGnBI,EAAAA,UAAU,QACVC,KAAKN,GACLO,QACApB,OAAO,QACPC,KAAK,SAAU,IACfA,KAAK,QAAS,SAAK,GACXI,OAAAA,EAAWW,EAAEK,cAErBpB,KAAK,IAAK,SAAK,GACPC,OAAAA,EAAec,EAAEC,QAEzBhB,KAAK,IAAK,GACVA,KAAK,OAAQ,SAAK,GACVO,OAAAA,EAAWQ,EAAEM,UAGpBC,IAAAA,EAAQzB,GAAG0B,SAAStB,GAGrBF,EAAAA,OAAO,KACPC,KAAK,QAAS,eACdwB,KAAKF,GAEJG,IAAAA,EAAQ5B,GAAG6B,WAAWtB,GAAYuB,MAAM,IAGzC5B,EAAAA,OAAO,KACPC,KAAK,QAAS,eACdA,KAAK,YAAa,eAAiBL,EAAS,KAC5C6B,KAAKC,KA1CPG,MAAM,SAASC,GACNC,QAAAA,IAAI,cAAeD,KAlChC","file":"13-chart.05c8a2f8.map","sourceRoot":"../src","sourcesContent":["/* global d3 */\n;(function() {\n  // Build your SVG here\n  // using all of that cut-and-paste magic\n  var margin = {\n    top: 25,\n    right: 25,\n    bottom: 25,\n    left: 60\n  }\n\n  var width = 400 - margin.left - margin.right\n  var height = 500 - margin.top - margin.bottom\n\n  var svg = d3\n    .select('#chart13')\n    .append('svg')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\n  // Build your scales here\n  var yPositionScale = d3.scaleBand().range([height, 0])\n\n  var widthScale = d3\n    .scaleLinear()\n    .domain([0, 10])\n    .range([0, width])\n\n  var colorScale = d3.scaleOrdinal().range(['#edf8b1', '#7fcdbb', '#2c7fb8'])\n\n  d3.csv('eating-data.csv')\n    .then(ready)\n    .catch(function(err) {\n      console.log('Failed with', err)\n    })\n\n  function ready(datapoints) {\n    // Add and style your marks here\n    var names = datapoints.map(d => {\n      return d.name\n    })\n\n    yPositionScale.domain(names)\n\n    svg\n      .selectAll('rect')\n      .data(datapoints)\n      .enter()\n      .append('rect')\n      .attr('height', 50)\n      .attr('width', d => {\n        return widthScale(d.hamburgers)\n      })\n      .attr('y', d => {\n        return yPositionScale(d.name)\n      })\n      .attr('x', 0)\n      .attr('fill', d => {\n        return colorScale(d.animal)\n      })\n\n    var yAxis = d3.axisLeft(yPositionScale)\n\n    svg\n      .append('g')\n      .attr('class', 'axis y-axis')\n      .call(yAxis)\n\n    var xAxis = d3.axisBottom(widthScale).ticks(10)\n\n    svg\n      .append('g')\n      .attr('class', 'axis x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n  }\n})()\n"]}